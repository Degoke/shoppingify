version: '3.9'
services:
  api:
    container_name: shoppingify
    image: shoppingify
    environment:
      - NODE_ENV=${NODE_ENV}
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${PORT}:${PORT}
    command: yarn run start:dev
    env_file:
      - .env
    networks: 
      - shoppingify
    depends_on:
      - postgres
      - redis
      - mongo
    restart: unless-stopped
  
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - /data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - shoppingify
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - PGDATA=/var/lib/postgresql/postgresdata

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - shoppingify
      - redis
    env_file:
      - .env

  mongo:
    container_name: mongo
    image: mongo:latest
    environment: 
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    networks:
       - shoppingify
       - mongo
    volumes:
      - database:/data/mongo

  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - 8080:80
    volumes:
      -  /data/pgadmin:/root/.pgadmin
    env_file:
      - .env
    networks:
      - shoppingify
    depends_on:
      - postgres

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=${REDIS_CMD_HOST}
      - PORT=8082
    ports:
      - 8082:8082
    depends_on:
      - redis
    networks:
      - redis

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_ADMIN_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_ADMIN_PASSWORD}
      - ME_CONFIG_MONGODB_URL=${MONGO_URI}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_PASSWORD}
    links:
     - mongo
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - mongo
    depends_on:
      - mongo
    ports:
      - 8081:8081

volumes:
  database:

networks:
  shoppingify:
  mongo:
  redis:


